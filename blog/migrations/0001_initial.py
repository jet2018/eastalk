# Generated by Django 3.2.6 on 2021-08-21 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Unique, catchy topic of the article', max_length=250, null=True, unique=True)),
                ('body', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Full body of the article, supports markup', null=True, verbose_name='Add hotel facilities')),
                ('introductory_file', models.FileField(help_text='Image or video to intoduce the rest of the blog', upload_to='blog_intros')),
                ('blog_color', models.CharField(choices=[('r', 'danger'), ('s', 'succes'), ('i', 'info')], max_length=10)),
                ('posted_on', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(unique=True)),
                ('schedule_to', models.DateField(blank=True, help_text='If you are want to schedule the blog to a future date.', null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authors.author')),
            ],
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('comment_on', models.DateTimeField(auto_now_add=True)),
                ('comment_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blog')),
                ('likes', models.ManyToManyField(related_name='commentLikes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=100)),
                ('added_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriber_type', models.CharField(choices=[('one', 'Singular'), ('two', 'Category'), ('three', 'Everything')], max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('subscription_length', models.CharField(choices=[('one', 'One month'), ('two', 'Six months'), ('three', 'One year'), ('four', 'Life time')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ReadArticles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_on', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('is_general', models.BooleanField(default=True)),
                ('icon', models.CharField(blank=True, max_length=60, null=True)),
                ('body', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Notification body')),
                ('notified_on', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(blank=True, help_text='The current logged in admin', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('to', models.ManyToManyField(related_name='receiver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_body', models.TextField()),
                ('reply_on', models.DateTimeField(auto_now_add=True)),
                ('likes', models.ManyToManyField(related_name='replyLikes', to=settings.AUTH_USER_MODEL)),
                ('reply_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blogcomment')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('sub_category', models.ManyToManyField(to='blog.SubCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ManyToManyField(to='blog.Category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='contributors',
            field=models.ManyToManyField(related_name='coauthors', to='authors.Author'),
        ),
        migrations.AddField(
            model_name='blog',
            name='downvotes',
            field=models.ManyToManyField(related_name='downvoters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blog',
            name='sub_category',
            field=models.ManyToManyField(to='blog.SubCategory', verbose_name='subCategory'),
        ),
        migrations.AddField(
            model_name='blog',
            name='upvotes',
            field=models.ManyToManyField(related_name='upvoters', to=settings.AUTH_USER_MODEL),
        ),
    ]
